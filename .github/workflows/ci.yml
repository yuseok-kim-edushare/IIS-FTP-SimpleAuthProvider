name: CI

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/*.json"
      - "**/*.xml"
      - "**/*.png"
      - "**/*.svg"
      - "**/*.pptx"
      - "**/*.ppt"
      - "**/*.pdf"
      - "**/*.docx"
      - "**/*.doc"
      - "**/*.xls"
      - "**/*.xlsx"
      - ".ai/**"
      - "docs/**"
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/*.json"
      - "**/*.xml"
      - "**/*.png"
      - "**/*.svg"
      - "**/*.pptx"
      - "**/*.ppt"
      - "**/*.pdf"
      - "**/*.docx"
      - "**/*.doc"
      - "**/*.xls"
      - "**/*.xlsx"
      - ".ai/**"
      - "docs/**"

jobs:
  build-and-test:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release, Debug]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: 0
          submodules: 'false'

      - name: Checkout WelsonJS (submodules)
        uses: actions/checkout@v5
        with:
          repository: gnh1201/welsonjs
          path: WelsonJS
          fetch-depth: 0
          fetch-tags: 0

      - name: install dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ${{ env.USERPROFILE }}\.nuget\packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.slnx') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet packages
        run: |
          dotnet restore IIS-FTP-SimpleAuthProvider.slnx

      # Build and test only projects that are compatible with GitHub Actions environment.
      # AuthProvider project is skipped due to missing Windows dependencies.

      - name: Build Core project
        run: |
          msbuild src\Core\Core.csproj /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /verbosity:minimal

      - name: Build ManagementWeb project
        run: |
          msbuild src\ManagementWeb\ManagementWeb.csproj /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /verbosity:minimal

      - name: Build ManagementCli project
        run: |
          msbuild src\ManagementCli\ManagementCli.csproj /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /verbosity:minimal

      - name: Run Core tests
        run: |
          dotnet test src\Core\Tests\Core.Tests.csproj --configuration ${{ matrix.configuration }} --no-build --verbosity normal

      - name: Run ManagementCli tests
        run: |
          dotnet test src\ManagementCli\Tests\ManagementCli.Tests.csproj --configuration ${{ matrix.configuration }} --no-build --verbosity normal

      - name: Build ManagementWeb package (Release only)
        if: matrix.configuration == 'Release'
        run: |
          msbuild src\ManagementWeb\ManagementWeb.csproj /p:Configuration=Release /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:PackageLocation="src\ManagementWeb\artifacts" /verbosity:minimal

      - name: Skip building AuthProvider
        run: echo "Skipping build for AuthProvider due to reliance on specific Windows components not available in GitHub Actions."
    