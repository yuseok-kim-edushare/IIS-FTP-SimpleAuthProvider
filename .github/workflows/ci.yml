name: CI

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/*.json"
      - "**/*.xml"
      - "**/*.png"
      - "**/*.svg"
      - "**/*.pptx"
      - "**/*.ppt"
      - "**/*.pdf"
      - "**/*.docx"
      - "**/*.doc"
      - "**/*.xls"
      - "**/*.xlsx"
      - ".ai/**"
      - "docs/**"
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/*.json"
      - "**/*.xml"
      - "**/*.png"
      - "**/*.svg"
      - "**/*.pptx"
      - "**/*.ppt"
      - "**/*.pdf"
      - "**/*.docx"
      - "**/*.doc"
      - "**/*.xls"
      - "**/*.xlsx"
      - ".ai/**"
      - "docs/**"

jobs:
  build-and-test:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release, Debug]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: 0
          submodules: 'false'

      - name: Checkout WelsonJS (submodules)
        uses: actions/checkout@v5
        with:
          repository: gnh1201/welsonjs
          path: WelsonJS
          fetch-depth: 0
          fetch-tags: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ${{ env.USERPROFILE }}\.nuget\packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.slnx') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet packages
        run: |
          nuget restore IIS-FTP-SimpleAuthProvider.slnx

      - name: Build solution
        run: |
          msbuild IIS-FTP-SimpleAuthProvider.slnx /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /verbosity:minimal

      - name: Run tests
        run: |
          msbuild IIS-FTP-SimpleAuthProvider.slnx /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /t:Test /verbosity:minimal

      - name: Build ManagementWeb package (Release only)
        if: matrix.configuration == 'Release'
        run: |
          msbuild src\ManagementWeb\ManagementWeb.csproj /p:Configuration=Release /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:PackageLocation="src\ManagementWeb\artifacts" /verbosity:minimal

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.configuration }}
          path: |
            **/TestResults/*.trx
            **/TestResults/*.html

      - name: Upload build artifacts
        if: matrix.configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.configuration }}
          path: |
            src/**/bin/${{ matrix.configuration }}/**/*.dll
            src/**/bin/${{ matrix.configuration }}/**/*.exe
            src/**/bin/${{ matrix.configuration }}/**/*.pdb
            src/ManagementWeb/artifacts/**/*.zip

    
    