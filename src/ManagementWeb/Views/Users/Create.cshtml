@model IIS.FTP.ManagementWeb.Models.UserViewModel
@{
    ViewBag.Title = "Create User";
}

<div class="row">
    <div class="col-12">
        <h1><i class="bi bi-person-plus"></i> Create User</h1>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                @Html.TextBoxFor(m => m.UserId, new { @class = "form-control", placeholder = "User ID", required = "required" })
                                @Html.LabelFor(m => m.UserId)
                                @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "invalid-feedback" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control", placeholder = "Display Name", required = "required" })
                                @Html.LabelFor(m => m.DisplayName)
                                @Html.ValidationMessageFor(m => m.DisplayName, "", new { @class = "invalid-feedback" })
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password", required = "required" })
                                @Html.LabelFor(m => m.Password)
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "invalid-feedback" })
                                <div class="form-text">Must be at least 8 characters long</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", required = "required" })
                                @Html.LabelFor(m => m.ConfirmPassword)
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "invalid-feedback" })
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-floating">
                            @Html.TextBoxFor(m => m.HomeDirectory, new { @class = "form-control", placeholder = "Home Directory", required = "required" })
                            @Html.LabelFor(m => m.HomeDirectory)
                            @Html.ValidationMessageFor(m => m.HomeDirectory, "", new { @class = "invalid-feedback" })
                            <div class="form-text">Example: C:\inetpub\ftproot\users\{username}</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card mt-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Permissions</h5>
                    <button type="button" class="btn btn-sm btn-outline-primary" id="addPermission">
                        <i class="bi bi-plus-circle"></i> Add Permission
                    </button>
                </div>
                <div class="card-body">
                    <div id="permissions-container">
                        @if (Model.Permissions.Count == 0)
                        {
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i> No permissions defined. Click "Add Permission" to grant access to specific directories.
                            </div>
                        }
                        else
                        {
                            for (int i = 0; i < Model.Permissions.Count; i++)
                            {
                                <div class="permission-row mb-2">
                                    <div class="row">
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.Permissions[i].Path, new { @class = "form-control", placeholder = "Path (e.g., /uploads)" })
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-check form-check-inline">
                                                @Html.CheckBoxFor(m => m.Permissions[i].Read, new { @class = "form-check-input" })
                                                @Html.LabelFor(m => m.Permissions[i].Read, "Read", new { @class = "form-check-label" })
                                            </div>
                                            <div class="form-check form-check-inline">
                                                @Html.CheckBoxFor(m => m.Permissions[i].Write, new { @class = "form-check-input" })
                                                @Html.LabelFor(m => m.Permissions[i].Write, "Write", new { @class = "form-check-label" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-sm btn-danger remove-permission">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle"></i> Create User
                </button>
                <a href="@Url.Action("Index", "Users")" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        }
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="bi bi-lightbulb"></i> Tips</h5>
            </div>
            <div class="card-body">
                <ul class="mb-0">
                    <li>User IDs should be unique and contain only letters, numbers, underscores, hyphens, and dots</li>
                    <li>Strong passwords should include uppercase, lowercase, numbers, and special characters</li>
                    <li>Home directories will be created automatically if they don't exist</li>
                    <li>Permissions are relative to the user's home directory unless they start with /</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function() {
            var permissionIndex = @Model.Permissions.Count;
            
            $('#addPermission').click(function() {
                $.post('@Url.Action("AddPermissionRow", "Users")', { index: permissionIndex }, function(html) {
                    $('#permissions-container').append(html);
                    permissionIndex++;
                });
            });
            
            $(document).on('click', '.remove-permission', function() {
                $(this).closest('.permission-row').remove();
            });
        });
    </script>
} 